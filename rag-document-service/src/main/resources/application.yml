server:
  port: 8083

spring:
  application:
    name: rag-document-service
  
  datasource:
    url: jdbc:postgresql://localhost:5432/rag_documents
    username: ${DB_USERNAME:rag_user}
    password: ${DB_PASSWORD:rag_password}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: document-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.enterprise.rag.shared.dto"
  
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  
  jackson:
    default-property-inclusion: NON_NULL
    serialization:
      write-dates-as-timestamps: false

# File Storage Configuration
file-storage:
  base-path: ${FILE_STORAGE_PATH:./uploads}
  temp-path: ${TEMP_STORAGE_PATH:./temp}

# Document Processing Configuration
document-processing:
  chunk-size: ${CHUNK_SIZE:1000}
  chunk-overlap: ${CHUNK_OVERLAP:200}
  max-chunks-per-document: ${MAX_CHUNKS:1000}

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method

# Logging
logging:
  level:
    com.enterprise.rag: DEBUG
    org.springframework.kafka: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n"

---
spring:
  config:
    activate:
      on-profile: docker

  datasource:
    url: jdbc:postgresql://postgres:5432/rag_documents
  
  kafka:
    bootstrap-servers: kafka:9092

---
spring:
  config:
    activate:
      on-profile: test

  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect